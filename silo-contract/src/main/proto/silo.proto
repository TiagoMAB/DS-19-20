//
// Protocol buffers definition for Silo server
//
syntax = "proto3";
package pt.tecnico.sauron.silo.grpc;

import "google/protobuf/timestamp.proto";

option java_multiple_files = true;            //TODO: check if needed


//
//Types
//
enum Type {
    UNKNOWN = 0;
    CAR = 1;
    PERSON = 2;
}

message Observation {                           //TODO: check between nested type or normal

    Type type = 1;
    string identifier = 2;
    google.protobuf.Timestamp date = 3;
    string name = 4;
    double latitude = 5;
    double longitude = 6;

}

//
//cam_join command request message
//
message CamJoinRequest {

    string name = 1;
    double latitude = 2;                        //TODO: check between double or float
    double longitude = 3;                       //TODO: check between double or float

}

//
//cam_join command response message
//
message CamJoinResponse {

}

//
//cam_info command request message
//
message CamInfoRequest {

    string name = 1;

}

//
//cam_info command response message
//
message CamInfoResponse {

    double latitude = 1;
    double longitude = 2;

}

//
//report command request message
//
message ReportRequest {

    string name = 1;
    repeated Observation observations = 2;

}

//
//report command response message
//
message ReportResponse {

}

//
//track command request message
//
message TrackRequest {

    Type type = 1;
    string identifier = 2;

}

//
//track command response message
//
message TrackResponse {

    Observation observation = 1;

}

//
//trackMatch command request message
//
message TrackMatchRequest {

    Type type = 1;
    string partialIdentifier = 2;

}

//
//trackMatch command response message
//
message TrackMatchResponse {

    repeated Observation observations = 2;

}

//
//trace command request message
//
message TraceRequest {

    Type type = 1;
    string identifier = 2;

}

//
//trace command response message
//
message TraceResponse {

    repeated Observation observations = 1;
}

//
//ctrl_ping command request message
//
message CtrlPingRequest {

}

//
//ctrl_ping command response message
//
message CtrlPingResponse {

    string state = 1;

}

//
//ctrl_clear command request message
//
message CtrlClearRequest {

}

//
//ctrl_clear command response message
//
message CtrlClearResponse {
                                                //TODO: check if returns string message or not
}

//
//ctrl_init command request message
//
message CtrlInitRequest {
                                                //TODO: check parameters
}

//
//ctrl_init command response message
//
message CtrlInitResponse {

}

//
// Silo service
//
service Silo {
    rpc cam_join(CamJoinRequest) returns (CamJoinResponse);
    rpc cam_info(CamInfoRequest) returns (CamInfoResponse);
    rpc report(ReportRequest) returns (ReportResponse);
    rpc track(TrackRequest) returns (TrackResponse);
    rpc track_match(TrackMatchRequest) returns (TrackMatchResponse);
    rpc trace(TraceRequest) returns (TraceResponse);
    rpc ctrl_ping(CtrlPingRequest) returns (CtrlPingResponse);
    rpc ctrl_clear(CtrlClearRequest) returns (CtrlClearResponse);
    rpc ctrl_init(CtrlInitRequest) returns (CtrlInitResponse);
}
